[{"D:\\Internship\\Housie\\frontend\\src\\index.js":"1","D:\\Internship\\Housie\\frontend\\src\\App.js":"2","D:\\Internship\\Housie\\frontend\\src\\reportWebVitals.js":"3","D:\\Internship\\Housie\\frontend\\src\\Components\\Index.js":"4","D:\\Internship\\Housie\\frontend\\src\\Layouts\\NavBar.js":"5","D:\\Internship\\Housie\\frontend\\src\\Redux\\store.js":"6","D:\\Internship\\Housie\\frontend\\src\\Redux\\Housie\\Reducers.js":"7","D:\\Internship\\Housie\\frontend\\src\\Redux\\Housie\\Types.js":"8","D:\\Internship\\Housie\\frontend\\src\\Redux\\Housie\\Action.js":"9","D:\\Internship\\Housie\\frontend\\src\\Components\\Login.js":"10","D:\\Internship\\Housie\\frontend\\src\\Components\\UserRegistration.js":"11","D:\\Internship\\Housie\\frontend\\src\\Layouts\\NavbarComponents\\ShowAllGames.js":"12","D:\\Internship\\Housie\\frontend\\src\\Layouts\\NavbarComponents\\CreateGameForm.js":"13"},{"size":542,"mtime":1612002258350,"results":"14","hashOfConfig":"15"},{"size":1193,"mtime":1612176110067,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":10500,"mtime":1612326527699,"results":"18","hashOfConfig":"15"},{"size":3630,"mtime":1612246221526,"results":"19","hashOfConfig":"15"},{"size":242,"mtime":1612011073266,"results":"20","hashOfConfig":"15"},{"size":1009,"mtime":1612250020943,"results":"21","hashOfConfig":"15"},{"size":99,"mtime":1612246266898,"results":"22","hashOfConfig":"15"},{"size":341,"mtime":1612247062115,"results":"23","hashOfConfig":"15"},{"size":4857,"mtime":1612185539804,"results":"24","hashOfConfig":"15"},{"size":5176,"mtime":1612178546119,"results":"25","hashOfConfig":"15"},{"size":2994,"mtime":1612276493848,"results":"26","hashOfConfig":"15"},{"size":2901,"mtime":1612246148563,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"ov0tlu",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"D:\\Internship\\Housie\\frontend\\src\\index.js",[],["60","61"],"D:\\Internship\\Housie\\frontend\\src\\App.js",["62"],"import logo from './logo.svg';\nimport './App.css';\nimport { Provider } from 'react-redux'\nimport { BrowserRouter ,Switch, Route, Redirect } from 'react-router-dom'\nimport {createBrowserHistory} from 'history';\nimport ReactNotification from 'react-notifications-component'\nimport 'react-notifications-component/dist/theme.css'\nimport Index from './Components/Index';\nimport store from './Redux/store';\nimport Login from './Components/Login';\nimport UserRegistration from './Components/UserRegistration';\n\n\nconst history = createBrowserHistory()\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">    \n        <ReactNotification />     \n        \n        <BrowserRouter history={history}>\n          <Switch>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n            <Route path=\"/registration\">\n              <UserRegistration />\n            </Route>\n            <Route path=\"/index\">\n              <Index />\n            </Route>\n            {localStorage.getItem('tokn') ? <Redirect to=\"/index\"/> : <Redirect to=\"/login\"/>}\n          </Switch>\n        </BrowserRouter>  \n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","D:\\Internship\\Housie\\frontend\\src\\reportWebVitals.js",[],"D:\\Internship\\Housie\\frontend\\src\\Components\\Index.js",["63","64"],"D:\\Internship\\Housie\\frontend\\src\\Layouts\\NavBar.js",["65","66","67","68","69","70","71","72","73","74","75","76","77","78"],"import React, { Component, useState, useEffect } from 'react'\r\nimport { Button, Col, Dropdown, DropdownItem, DropdownMenu, DropdownToggle, Form, FormGroup, Input, Label, Modal, ModalBody, ModalHeader, Nav, Navbar, NavbarBrand, NavItem, NavLink, Row, UncontrolledDropdown } from 'reactstrap'\r\nimport {useForm} from 'react-hook-form'\r\nimport axios from 'axios'\r\nimport {store} from 'react-notifications-component'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport ShowAllGames from './NavbarComponents/ShowAllGames.js'\r\nimport CreateGameForm from './NavbarComponents/CreateGameForm.js'\r\n\r\nexport default class NavBar extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            createGameModal: false,\r\n            allGameModal: false,\r\n        }\r\n    }\r\n\r\n    handleLogout = () => {\r\n        localStorage.removeItem('tokn')\r\n        window.location.href = \"/logout\"\r\n    }\r\n\r\n    toggleCreateGameModal = () => {\r\n        this.setState({\r\n            createGameModal: !this.state.createGameModal\r\n        })\r\n    }\r\n    toggleAllGameModal = () => {\r\n        this.setState({\r\n            allGameModal: !this.state.allGameModal\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar color=\"dark\" dark className=\"border-bottom\">\r\n                    <NavbarBrand href=\"/index\">Housie</NavbarBrand>\r\n                    {localStorage.getItem('tokn')?\r\n                    <Nav>\r\n                        <NavItem>\r\n                            <NavLink className=\"cursor-pointer\" onClick={this.toggleCreateGameModal}>Create Game</NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink className=\"cursor-pointer\" onClick={this.toggleAllGameModal}>Show All Games</NavLink>\r\n                        </NavItem>\r\n                        <UncontrolledDropdown nav inNavbar>\r\n                            <DropdownToggle nav caret>\r\n                                Profile\r\n                            </DropdownToggle>\r\n                            <DropdownMenu right>\r\n                                <DropdownItem>\r\n                                    Name: {JSON.parse(localStorage.getItem('usr')).name}\r\n                                </DropdownItem>\r\n                                <DropdownItem>\r\n                                    Email: {JSON.parse(localStorage.getItem('usr')).email}\r\n                                </DropdownItem>\r\n                                <DropdownItem onClick={this.handleLogout}>\r\n                                    Logout\r\n                                </DropdownItem>\r\n                            </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                    </Nav>\r\n                    :<></>}\r\n                </Navbar>\r\n\r\n                <Modal isOpen={this.state.createGameModal} backdrop={'static'} toggle={this.toggleCreateGameModal}>\r\n                    <ModalHeader toggle={this.toggleCreateGameModal}>Create Game</ModalHeader>\r\n                    <ModalBody>\r\n                        <CreateGameForm toggleCreateGameModal={this.toggleCreateGameModal} />\r\n                    </ModalBody>\r\n                </Modal>\r\n\r\n                <Modal isOpen={this.state.allGameModal} size=\"lg\" backdrop={'static'} toggle={this.toggleAllGameModal}>\r\n                    <ModalHeader toggle={this.toggleAllGameModal}>All Games</ModalHeader>\r\n                    <ModalBody>\r\n                        <ShowAllGames />\r\n                    </ModalBody>\r\n                </Modal>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","D:\\Internship\\Housie\\frontend\\src\\Redux\\store.js",[],"D:\\Internship\\Housie\\frontend\\src\\Redux\\Housie\\Reducers.js",[],"D:\\Internship\\Housie\\frontend\\src\\Redux\\Housie\\Types.js",[],"D:\\Internship\\Housie\\frontend\\src\\Redux\\Housie\\Action.js",[],"D:\\Internship\\Housie\\frontend\\src\\Components\\Login.js",["79"],"import React, {useState, useEffect} from 'react'\r\nimport { Button, Card, CardBody, Form, FormGroup, Label, Input, Row, Col } from 'reactstrap'\r\nimport axios from 'axios'\r\nimport NavBar from '../Layouts/NavBar';\r\nimport {store} from 'react-notifications-component'\r\n\r\nexport default function Login() {\r\n\r\n    const [email, setEmail] = useState()\r\n    const [password, setPassword] = useState()\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        axios.post(`http://localhost:3001/admin/login`, \r\n            {\r\n                email: email,\r\n                password: password\r\n            }\r\n        ).then(response => {\r\n            console.log(response)\r\n            if(response.data.statusCode === 404){\r\n                store.addNotification({\r\n                    title: \"Not Found\",\r\n                    message: \"User Not Found\",\r\n                    type: \"info\",\r\n                    insert: \"top\",\r\n                    container: \"top-right\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeOut\"],\r\n                    dismiss: {\r\n                      duration: 2000,\r\n                      onScreen: true\r\n                    }\r\n                  });\r\n            }\r\n            if(response.data.statusCode === 403){\r\n                alert(\"Wrong Password\")\r\n                store.addNotification({\r\n                    title: \"Not Found\",\r\n                    message: \"Wrong Password\",\r\n                    type: \"info\",\r\n                    insert: \"top\",\r\n                    container: \"top-right\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeOut\"],\r\n                    dismiss: {\r\n                      duration: 2000,\r\n                      onScreen: true\r\n                    }\r\n                  });\r\n            }\r\n            if(response.data.statusCode === 200){\r\n                store.addNotification({\r\n                    title: \"Login\",\r\n                    message: \"Login Successfully\",\r\n                    type: \"success\",\r\n                    insert: \"top\",\r\n                    container: \"top-right\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeOut\"],\r\n                    dismiss: {\r\n                      duration: 2000,\r\n                      onScreen: true\r\n                    }\r\n                  });\r\n                localStorage.setItem('tokn', response.data.token)\r\n                localStorage.setItem('usr', JSON.stringify(response.data.user))\r\n                window.location.href = \"/index\"\r\n            }\r\n        }).catch(error => {\r\n            console.log(error)\r\n            store.addNotification({\r\n                title: \"Login\",\r\n                message: \"Internal Server Error\",\r\n                type: \"info\",\r\n                insert: \"top\",\r\n                container: \"top-right\",\r\n                animationIn: [\"animated\", \"fadeIn\"],\r\n                animationOut: [\"animated\", \"fadeOut\"],\r\n                dismiss: {\r\n                  duration: 2000,\r\n                  onScreen: true\r\n                }\r\n              });\r\n        })\r\n\r\n    }\r\n    useEffect(() => {\r\n        if(localStorage.getItem('tokn')){\r\n            window.location.href = \"/index\"\r\n        }\r\n    }, [0])\r\n    return (\r\n        <React.Fragment>\r\n            <NavBar />\r\n            <div className=\"container vh-100 d-flex justify-content-center\" style={{flexDirection: \"column\"}}>\r\n                <Row className=\"justify-content-center\">\r\n                    <Col md={5}>\r\n                        <Card className=\"shadow-sm text-left\">\r\n                            <CardBody>\r\n                                <h2>Login</h2>\r\n                                <p>Welcome to housie game.</p>\r\n                                <Form onSubmit={handleSubmit}>\r\n                                    <FormGroup>\r\n                                        <Label>Email</Label>\r\n                                        <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\" onChange={(e)=>setEmail(e.target.value)} />\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label>Password</Label>\r\n                                        <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" onChange={(e)=>setPassword(e.target.value)}/>\r\n                                    </FormGroup>\r\n                                    <Button block color=\"success\">Login</Button>\r\n                                </Form>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","D:\\Internship\\Housie\\frontend\\src\\Components\\UserRegistration.js",["80","81"],"import React, { useState, useEffect } from 'react'\r\nimport { Button, Card, CardBody, Form, FormGroup, Label, Input, Row, Col, Alert } from 'reactstrap'\r\nimport { useForm } from 'react-hook-form'\r\nimport axios from 'axios'\r\nimport { store } from 'react-notifications-component'\r\n\r\nexport default function UserRegistration() {\r\n\r\n\r\n    const [isRegistrationSuccess, setIsRegistrationSuccess] = useState(false)\r\n\r\n    const { register, handleSubmit, errors } = useForm()\r\n\r\n    const onSubmit = (data) => {\r\n\r\n        console.log(data)\r\n        axios.post(`http://localhost:3001/user/registration`, data).then(response => {\r\n            console.log(response)\r\n\r\n            // alert(\"Created\")\r\n\r\n            if (response.data.statusCode === 201) {\r\n                store.addNotification({\r\n                    title: \"Error\",\r\n                    message: \"User Already Exists\",\r\n                    type: \"danger\",\r\n                    insert: \"top\",\r\n                    container: \"top-right\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeOut\"],\r\n                    dismiss: {\r\n                        duration: 2000,\r\n                        onScreen: true\r\n                    }\r\n                });\r\n            }\r\n            if (response.data.statusCode === 200) {\r\n                setIsRegistrationSuccess(true)\r\n                store.addNotification({\r\n                    title: \"Success\",\r\n                    message: \"Registration Successfull\",\r\n                    type: \"success\",\r\n                    insert: \"top\",\r\n                    container: \"top-right\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeOut\"],\r\n                    dismiss: {\r\n                        duration: 2000,\r\n                        onScreen: true\r\n                    }\r\n                });\r\n            }\r\n\r\n        }).catch(error => {\r\n            console.log(error)\r\n            store.addNotification({\r\n                title: \"Error\",\r\n                message: \"Internal Server Error\",\r\n                type: \"danger\",\r\n                insert: \"top\",\r\n                container: \"top-right\",\r\n                animationIn: [\"animated\", \"fadeIn\"],\r\n                animationOut: [\"animated\", \"fadeOut\"],\r\n                dismiss: {\r\n                    duration: 2000,\r\n                    onScreen: true\r\n                }\r\n            });\r\n        })\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container vh-100 d-flex justify-content-center\" style={{ flexDirection: \"column\" }}>\r\n            <Row className=\"justify-content-center\">\r\n                <Col md={5}>\r\n                    <Card className=\"shadow-sm text-left\">\r\n                        <CardBody>\r\n                            <h2>Registration</h2>\r\n                            <p>Welcome to housie game.</p>\r\n                            {isRegistrationSuccess ?\r\n                                <Alert>Regsitration Successfull</Alert>\r\n                                :\r\n                                <Form onSubmit={handleSubmit(onSubmit)}>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <FormGroup>\r\n                                                <Label>Name</Label>\r\n                                                <input type=\"text\" className=\"form-control\" name=\"name\" id=\"name\" placeholder=\"Name\" ref={register({ required: true })} autocomplete=\"off\" />\r\n                                                {errors.name && <p className=\"text-danger\">Required</p>}\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <FormGroup>\r\n                                                <Label>Mobile</Label>\r\n                                                <input type=\"number\" className=\"form-control\" name=\"mobile\" id=\"mobile\" placeholder=\"Mobile\" ref={register({ required: true, validate: (val) => val && val.length === 10 })} />\r\n                                                {errors.mobile?.type === \"required\" && <p className=\"text-danger\">Required</p>}\r\n                                                {errors.mobile?.type === \"validate\" && <p className=\"text-danger\">Invalid Mobile</p>}\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Button block color=\"success\" outline type=\"submit\">Register</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Form>\r\n                            }\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","D:\\Internship\\Housie\\frontend\\src\\Layouts\\NavbarComponents\\ShowAllGames.js",["82","83"],"import React, { useState, useEffect } from 'react'\r\nimport { Button } from 'reactstrap'\r\nimport axios from 'axios'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport { connect } from 'react-redux'\r\nimport { selectGame } from '../../Redux/Housie/Action'\r\n\r\nfunction ShowAllGames(props){\r\n    const [games, setAllGames] = useState({\r\n        allGames: [],\r\n        isAllGamesReturned: false\r\n    })\r\n\r\n    useEffect(() => {\r\n        fetchAllGame()\r\n    }, [0])\r\n\r\n    const fetchAllGame = () => {\r\n        axios.get(`http://localhost:3001/admin/game/fetch/all`,{\r\n            headers: {\r\n                'Authorization' : `Bearer ${localStorage.getItem(\"tokn\")}`\r\n            }\r\n        }).then(response => {\r\n            if(response.data.statusCode === 200){\r\n                let rowsData = []\r\n                for (var i = 0; i < response.data.result.length; i++) {\r\n                    let rowItem = response.data.result[i]\r\n                    rowItem[\"gameDate\"] = `${new Date(response.data.result[i].gameDate)}`.substr(0, 25)\r\n                    rowItem[\"usersCount\"] = response.data.result[i].users.length\r\n                    rowItem[\"playBtn\"] = <Button id={i} onClick={() => props.selectGame(JSON.stringify({gameId: rowItem._id, gameName: rowItem.name, gameDateTime: rowItem.gameDate, numUsers: rowItem.usersCount, done: rowItem.done}))} className=\"btn btn-danger py-0 px-3\">Play</Button>\r\n\r\n                    rowsData.push(rowItem)\r\n                }\r\n                setAllGames({\r\n                    allGames: rowsData,\r\n                    isAllGamesReturned: true\r\n                })\r\n            }\r\n            \r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n    \r\n    const columnData = [\r\n        {\r\n            label: 'Name',\r\n            field: 'name',\r\n            sort: 'asc',\r\n        },\r\n        {\r\n            label: 'Game Date/Time',\r\n            field: 'gameDate',\r\n            sort: 'asc',\r\n        },\r\n        {\r\n            label: 'Users',\r\n            field: 'usersCount',\r\n            sort: 'asc',\r\n        },\r\n        {\r\n            label: 'Action',\r\n            field: 'playBtn',\r\n            sort: 'asc',\r\n        },\r\n    ]   \r\n        \r\n\r\n    return (\r\n        <React.Fragment>\r\n            {games.isAllGamesReturned?\r\n                <MDBDataTable\r\n                    hover\r\n                    bordered\r\n                    entries={20}\r\n                    striped\r\n                    paging={false}\r\n                    data={{\r\n                        columns: columnData,\r\n                        rows: games.allGames\r\n                    }}\r\n                />\r\n            :<></>}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        gameData: state\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        selectGame: (data) => dispatch(selectGame(data))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowAllGames);","D:\\Internship\\Housie\\frontend\\src\\Layouts\\NavbarComponents\\CreateGameForm.js",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":1,"column":8,"nodeType":"90","messageId":"91","endLine":1,"endColumn":12},{"ruleId":"92","severity":1,"message":"93","line":209,"column":8,"nodeType":"94","endLine":209,"endColumn":11,"suggestions":"95"},{"ruleId":"92","severity":1,"message":"96","line":209,"column":9,"nodeType":"97","endLine":209,"endColumn":10},{"ruleId":"88","severity":1,"message":"98","line":1,"column":28,"nodeType":"90","messageId":"91","endLine":1,"endColumn":36},{"ruleId":"88","severity":1,"message":"99","line":1,"column":38,"nodeType":"90","messageId":"91","endLine":1,"endColumn":47},{"ruleId":"88","severity":1,"message":"100","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":16},{"ruleId":"88","severity":1,"message":"101","line":2,"column":18,"nodeType":"90","messageId":"91","endLine":2,"endColumn":21},{"ruleId":"88","severity":1,"message":"102","line":2,"column":23,"nodeType":"90","messageId":"91","endLine":2,"endColumn":31},{"ruleId":"88","severity":1,"message":"103","line":2,"column":77,"nodeType":"90","messageId":"91","endLine":2,"endColumn":81},{"ruleId":"88","severity":1,"message":"104","line":2,"column":83,"nodeType":"90","messageId":"91","endLine":2,"endColumn":92},{"ruleId":"88","severity":1,"message":"105","line":2,"column":94,"nodeType":"90","messageId":"91","endLine":2,"endColumn":99},{"ruleId":"88","severity":1,"message":"106","line":2,"column":101,"nodeType":"90","messageId":"91","endLine":2,"endColumn":106},{"ruleId":"88","severity":1,"message":"107","line":2,"column":183,"nodeType":"90","messageId":"91","endLine":2,"endColumn":186},{"ruleId":"88","severity":1,"message":"108","line":3,"column":9,"nodeType":"90","messageId":"91","endLine":3,"endColumn":16},{"ruleId":"88","severity":1,"message":"109","line":4,"column":8,"nodeType":"90","messageId":"91","endLine":4,"endColumn":13},{"ruleId":"88","severity":1,"message":"110","line":5,"column":9,"nodeType":"90","messageId":"91","endLine":5,"endColumn":14},{"ruleId":"88","severity":1,"message":"111","line":6,"column":10,"nodeType":"90","messageId":"91","endLine":6,"endColumn":22},{"ruleId":"92","severity":1,"message":"96","line":93,"column":9,"nodeType":"97","endLine":93,"endColumn":10},{"ruleId":"88","severity":1,"message":"99","line":1,"column":27,"nodeType":"90","messageId":"91","endLine":1,"endColumn":36},{"ruleId":"88","severity":1,"message":"105","line":2,"column":58,"nodeType":"90","messageId":"91","endLine":2,"endColumn":63},{"ruleId":"92","severity":1,"message":"93","line":16,"column":8,"nodeType":"94","endLine":16,"endColumn":11,"suggestions":"112"},{"ruleId":"92","severity":1,"message":"96","line":16,"column":9,"nodeType":"97","endLine":16,"endColumn":10},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchAllGame'. Either include it or remove the dependency array.","ArrayExpression",["115"],"The 0 literal is not a valid dependency because it never changes. You can safely remove it.","Literal","'useState' is defined but never used.","'useEffect' is defined but never used.","'Button' is defined but never used.","'Col' is defined but never used.","'Dropdown' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Input' is defined but never used.","'Label' is defined but never used.","'Row' is defined but never used.","'useForm' is defined but never used.","'axios' is defined but never used.","'store' is defined but never used.","'MDBDataTable' is defined but never used.",["116"],"no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},{"desc":"117","fix":"119"},"Update the dependencies array to be: [fetchAllGame]",{"range":"120","text":"121"},{"range":"122","text":"121"},[8252,8255],"[fetchAllGame]",[452,455]]